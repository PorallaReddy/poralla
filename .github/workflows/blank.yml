# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |pipeline {
    agent Any

    stages {
        stage('Build') {
            steps {
                echo "Building.."
                Bat 'C:\programme\maven\bin/mvn -f https://www.code.dtf.lighting.com/projects/CTX/repos/iac_parent/browse/pom.xml clean install'
                sh 'cp $Module/$Application/target/*.jar $Source'
            }
        }
        stage('Test_Deploy') {
            steps {
                echo "Deploying to Test environment.."
                sh '/programme/scripts/tc_deploy.sh $Server $Application $Source'
            }
        }
        stage('Test') {
            steps {
                echo "Testing.."
            }
        }
        stage('input') {
             steps {
                echo "Enter the input"
                timeout(time: 5, unit: "MINUTES") {
                input message: 'Do you want to proceed the deploy in stage?', ok: 'Yes'
              }
              }
              }
stage('Copying'{
            steps {
                echo "Copying artifacts to tomcat servers"
                sh 'scp -i /home/ec2-user/Firstvpc.pem $Module/$Application/target/*.jar ec2-user@13.232.4.54:$Source/'
            }
            }
  stage('Stage_Deploy_Deploy') {
            steps {
                echo "Deploying to Stage Environment.."
                sh '/programme/scripts/tc_deploy.sh $Server $Application $Source'     
 }

    }
}
}

        
